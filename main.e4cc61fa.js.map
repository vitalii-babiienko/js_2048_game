{"version":3,"sources":["scripts/main.js"],"names":["startMessage","document","querySelector","winMessage","loseMessage","gameScore","startButton","fieldRows","querySelectorAll","size","score","field","clearField","fillRandomCell","row","Math","floor","random","cell","fillGameField","currentRenderCell","children","currentCell","innerText","className","removeEventListener","handleArrows","classList","remove","checkGameOver","gameOver","transposedField","transpose","fieldContainsZero","some","includes","arr","map","_","columnIndex","mergeRowCells","i","length","splice","push","removeZeros","filter","value","clickArrowLeft","filledCells","clickArrowRight","reverse","clickArrowUp","clickArrowDown","fillFieldCells","e","key","addEventListener","add","replace","hidden"],"mappings":"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","file":"main.e4cc61fa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button');\nconst fieldRows = document.querySelectorAll('.field-row');\n\nconst size = 4;\nlet score = 0;\nlet field = clearField();\n\nfunction clearField() {\n  return [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n}\n\nfunction fillRandomCell() {\n  const row = Math.floor(Math.random() * size);\n  const cell = Math.floor(Math.random() * size);\n\n  (field[row][cell] === 0)\n    ? field[row][cell] = Math.random() > 0.1 ? 2 : 4\n    : fillRandomCell();\n}\n\nfunction fillGameField() {\n  for (let row = 0; row < size; row++) {\n    for (let cell = 0; cell < size; cell++) {\n      const currentRenderCell = fieldRows[row].children[cell];\n      const currentCell = field[row][cell];\n\n      currentRenderCell.innerText = currentCell || '';\n\n      currentRenderCell.className = currentCell\n        ? `field-cell field-cell--${currentCell}`\n        : 'field-cell';\n\n      if (currentCell === 2048) {\n        document.removeEventListener('keydown', handleArrows);\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n\n  gameScore.innerText = score;\n  checkGameOver();\n}\n\nfunction checkGameOver() {\n  let gameOver = true;\n  const transposedField = transpose([...field]);\n  const fieldContainsZero = field.some(row => row.includes(0));\n\n  for (let row = 0; row < size; row++) {\n    for (let cell = 0; cell < size - 1; cell++) {\n      if (field[row][cell] === field[row][cell + 1]\n        || transposedField[row][cell] === transposedField[row][cell + 1]) {\n        gameOver = false;\n      }\n    }\n  }\n\n  if (gameOver && !fieldContainsZero) {\n    document.removeEventListener('keydown', handleArrows);\n    loseMessage.classList.remove('hidden');\n  }\n}\n\nfunction transpose(arr) {\n  return arr.map((_, columnIndex) => arr.map(row => row[columnIndex]));\n}\n\nfunction mergeRowCells(row) {\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row.splice(i + 1, 1);\n      score += row[i];\n    }\n  }\n\n  while (row.length < size) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction removeZeros(arr) {\n  return arr.filter(value => value !== 0);\n}\n\nfunction clickArrowLeft() {\n  for (let row = 0; row < size; row++) {\n    const filledCells = removeZeros(field[row]);\n\n    mergeRowCells(filledCells);\n    field[row] = filledCells;\n  }\n}\n\nfunction clickArrowRight() {\n  for (let row = 0; row < size; row++) {\n    const filledCells = removeZeros(field[row].reverse());\n\n    mergeRowCells(filledCells);\n    field[row] = filledCells.reverse();\n  }\n}\n\nfunction clickArrowUp() {\n  field = transpose(field);\n  clickArrowLeft();\n  field = transpose(field);\n}\n\nfunction clickArrowDown() {\n  field = transpose(field);\n  clickArrowRight();\n  field = transpose(field);\n}\n\nfunction fillFieldCells() {\n  fillRandomCell();\n  fillGameField();\n}\n\nfunction handleArrows(e) {\n  switch (e.key) {\n    case 'ArrowLeft':\n      clickArrowLeft();\n      fillFieldCells();\n      break;\n\n    case 'ArrowRight':\n      clickArrowRight();\n      fillFieldCells();\n      break;\n\n    case 'ArrowUp':\n      clickArrowUp();\n      fillFieldCells();\n      break;\n\n    case 'ArrowDown':\n      clickArrowDown();\n      fillFieldCells();\n      break;\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  document.addEventListener('keydown', handleArrows);\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n\n  if (startButton.innerText === 'Start') {\n    startButton.innerText = 'Restart';\n    startButton.classList.replace('start', 'restart');\n    startMessage.hidden = true;\n  } else {\n    field = clearField();\n    score = 0;\n  }\n\n  fillRandomCell();\n  fillFieldCells();\n});\n"]}